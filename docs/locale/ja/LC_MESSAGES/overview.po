msgid ""
msgstr ""
"Project-Id-Version: qiskitdocs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-11 20:59+0000\n"
"PO-Revision-Date: 2019-06-14 02:07\n"
"Last-Translator: lzdanski\n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: qiskitdocs\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /poRepo/docs/locale/en/LC_MESSAGES/overview.po\n"
"Language: ja_JP\n"

#: ../../overview.rst:2
msgid "Overview"
msgstr "概要"

#: ../../overview.rst:4
msgid "Qiskit is an open-source framework for working with noisy quantum computers at the level of pulses, circuits, and algorithms."
msgstr "Qiskit は、パルス、回路、アルゴリズムレベルでノイズの多い量子コンピュータを操作するオープンソースフレームワークです。"

#: ../../overview.rst:8
msgid "Certainly, a central goal of Qiskit is to build a software stack that makes it easy for anyone to use quantum computers. However, Qiskit also aims to facilitate research on the most important open issues facing quantum computation today."
msgstr "Qiskit のメインゴールは誰でも簡単に量子コンピュータを使用できるソフトウエアスタックの構築にありますが、Qiskit にはまた、今日の量子コンピューティングが直面している、もっとも重要な未解決課題への研究を手助けする目標もあります。"

#: ../../overview.rst:12
msgid "Qiskit allows the user to easily design experiments and run them on simulators and real quantum computers."
msgstr "Qiskit を使用して簡単に実験を計画し、シミュレータや本物の量子コンピュータの上で実行できます。"

#: ../../overview.rst:15
msgid "Qiskit consists of four foundational elements:  Terra (the code foundation, for composing quantum programs at the level of circuits and pulses), Aqua (for building algorithms and applications), Ignis (for addressing noise and errors), and Aer (for accelerating development via simulators, emulators and debuggers)."
msgstr "Qiskit は 4つの基本要素から構成されます。コードの基礎であり、回路とパルスのレベルで量子プログラムを構成する「Terra」、 アルゴリズムとアプリケーションをビルドする「Aqua」、ノイズとエラーに対処する「Ignis」、そして シミュレータ、エミュレータ、デバッガによって開発を促進する「Aer」です。"

#: ../../overview.rst:23
msgid "Qiskit Elements"
msgstr "Qiskit の要素"

#: ../../overview.rst:29
msgid "Qiskit Terra"
msgstr "Qiskit Terra"

#: ../../overview.rst:31
msgid "Terra , the ‘earth’ element, is the foundation on which the rest of Qiskit lies. Terra provides a bedrock for composing quantum programs at the level of circuits and pulses, to optimize them for the constraints of a particular device, and to manage the execution of batches of experiments on remote-access devices. Terra defines the interfaces for a desirable end-user experience, as well as the efficient handling of layers of optimization, pulse scheduling and backend communication."
msgstr "「Terra」要素(「地」の意) は、他の要素「Aer」「Ignis」「Aqua」を支える土台になります。 量子プログラムの構成基盤を回路やパルスレベルで提供し、特定の装置の制約に対応して最適化し、 リモート装置に対する複数の実験の実行を管理します。 「Terra」は、素晴らしいユーザー体験インターフェースを定義すると同時に、効果的な最適化レイヤー処理、 パルススケジューリング、バックエンド通信を定義します。"

#: ../../overview.rst:39
msgid "Qiskit Aer"
msgstr "Qiskit Aer"

#: ../../overview.rst:41
msgid "Aer, the ‘air’ element, permeates all Qiskit elements. To really speed up development of quantum computers we need better simulators, emulators and debuggers.  Aer will help us understand the limits of classical processors by demonstrating to what extent they can mimic quantum computation. Furthermore, we can use Aer to verify that current and near-future quantum computers function correctly. This can be done by stretching the limits of simulation, and by simulating the effects of realistic noise on the computation."
msgstr "「Aer」要素(「空」の意) は、あらゆる Qiskit 要素に浸透します。量子コンピュータの開発スピードを本当に上げるには より良いシミュレータ、より良いエミュレータ、より良いデバッガが必要です。 「Aer」を使用することで古典プロセッサのどの部分で量子コンピューティングを模倣できるかが分かり、 古典プロセッサの限界を理解できます。 さらに「Aer」を使用して現在そして近い将来の量子コンピュータ機能を正確に検証できます。 これにはシミュレーションの限界を引き上げること、そして、 計算における現実のノイズの効果をシミュレーションすることが寄与します。"

#: ../../overview.rst:50
msgid "Qiskit Ignis"
msgstr "Qiskit Ignis"

#: ../../overview.rst:52
msgid "Ignis, the ‘fire’ element, is dedicated to fighting noise and errors and to forging a new path. This includes better characterization of errors, improving gates, and computing in the presence of noise. Ignis is meant for those who want to design quantum error correction codes, or who wish to study ways to characterize errors through methods such as tomography, or even to find a better way for using gates by exploring dynamical decoupling and optimal control."
msgstr ""

#: ../../overview.rst:60
msgid "Qiskit Aqua"
msgstr ""

#: ../../overview.rst:62
msgid "Aqua, the ‘water’ element, is the element of life. To make quantum computing live up to its expectations, we need to find real-world applications. Aqua is where algorithms for NISQ computers are built. These algorithms can be used to build applications for quantum computing. Aqua is accessible to domain experts in chemistry, optimization or AI, who want to explore the benefits of using quantum computers as accelerators for specific computational tasks, without needing to worry about how to translate the problem into the language of quantum machines."
msgstr ""

#: ../../overview.rst:71
msgid "Qiskit Components"
msgstr ""

#: ../../overview.rst:73
msgid "The components of Qiskit extend the functionality."
msgstr ""

#: ../../overview.rst:76
msgid "Qiskit Chemistry"
msgstr ""

#: ../../overview.rst:78
msgid "Qiskit Chemistry extends the Aqua element to allow the user to work easier with quantum computing for quantum chemistry problem. Is a set of tools, algorithms and software to use for quantum chemistry research. Qiskit Chemistry comes with interfaces prebuilt for the following four computational chemistry software drivers: Gaussian™ 16 (a commercial chemistry program), PSI4 (an open-source chemistry program built on Python), PySCF (an open-source Python chemistry program), and PyQuante (a pure Python cross-platform open-source chemistry program)."
msgstr ""

