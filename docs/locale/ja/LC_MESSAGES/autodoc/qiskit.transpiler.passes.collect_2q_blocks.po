msgid ""
msgstr ""
"Project-Id-Version: qiskitdocs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-11 20:59+0000\n"
"PO-Revision-Date: 2019-06-12 05:24\n"
"Last-Translator: lzdanski\n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: qiskitdocs\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /poRepo/docs/locale/en/LC_MESSAGES/autodoc/qiskit.transpiler.passes.collect_2q_blocks.po\n"
"Language: ja_JP\n"

#: ../../autodoc/qiskit.transpiler.passes.collect_2q_blocks.rst:2
msgid "qiskit.transpiler.passes.collect\\_2q\\_blocks module"
msgstr ""

#: of qiskit.transpiler.passes.collect_2q_blocks:1
msgid "Traverse the DAG and find blocks of gates that act consecutively on pairs of qubits. Write the blocks to propert_set as a dictionary of the form:"
msgstr ""

#: of qiskit.transpiler.passes.collect_2q_blocks:7
msgid "{(q0, q1): [[g0, g1, g2], [g5]],"
msgstr ""

#: of qiskit.transpiler.passes.collect_2q_blocks:6
msgid "(q0, q2): [[g3, g4]] .. ."
msgstr ""

#: of qiskit.transpiler.passes.collect_2q_blocks:9
msgid "}"
msgstr ""

#: of qiskit.transpiler.passes.collect_2q_blocks:11
msgid "Based on implementation by Andrew Cross."
msgstr ""

#: of qiskit.transpiler.passes.collect_2q_blocks.Collect2qBlocks:1
msgid "ベースクラス: :class:`qiskit.transpiler.basepasses.AnalysisPass`"
msgstr ""

#: of qiskit.transpiler.passes.collect_2q_blocks.Collect2qBlocks:1
msgid "Pass to collect sequences of uninterrupted gates acting on 2 qubits."
msgstr ""

#: of qiskit.transpiler.passes.collect_2q_blocks.Collect2qBlocks.run:1
msgid "collect blocks of adjacent gates acting on a pair of \"cx\" qubits."
msgstr ""

#: of qiskit.transpiler.passes.collect_2q_blocks.Collect2qBlocks.run:3
msgid "The blocks contain \"op\" nodes in topological sort order such that all gates in a block act on the same pair of qubits and are adjacent in the circuit. the blocks are built by examining predecessors and successors of \"cx\" gates in the circuit. u1, u2, u3, cx, id gates will be included."
msgstr ""

#: of qiskit.transpiler.passes.collect_2q_blocks.Collect2qBlocks.run:9
msgid "Return a list of tuples of \"op\" node labels."
msgstr ""

