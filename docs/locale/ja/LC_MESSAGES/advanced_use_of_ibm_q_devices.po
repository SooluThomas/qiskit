msgid ""
msgstr ""
"Project-Id-Version: qiskitdocs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-01 13:42+0000\n"
"PO-Revision-Date: 2019-08-01 13:56\n"
"Last-Translator: lzdanski\n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: qiskitdocs\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /poRepo/docs/locale/en/LC_MESSAGES/advanced_use_of_ibm_q_devices.po\n"
"Language: ja_JP\n"

#: ../../advanced_use_of_ibm_q_devices.rst:4
msgid "Advanced Use of IBM Q Devices"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:8
msgid "This documentation describes access to the IBM Q devices using API version 2.0 and higher, which is available in Qiskit 0.11+."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:11
msgid "In Qiskit we have an interface for backends and jobs that is useful for running quantum circuits and/or pulse schedules and extending to third-party backends. In this section, we will review the core components of Qiskit’s base backend framework, using the IBM Q account as an example."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:15
msgid "The interface has four parts: the account, the provider, the backend, and the job:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:17
msgid "account: Gives access to one or more 'providers' based on account permissions."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:18
msgid "provider: Provides access to quantum devices and simulators, collectively called 'backends', and additional services tailored to a specific backend instance."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:20
msgid "backend: A quantum device or simulator capable of running quantum circuits or pulse schedules."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:21
msgid "job: A local reference to a collection of quantum circuits or pulse schedules submitted to a given backend."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:25
msgid "The Account"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:27
msgid "The Qiskit ``IBMQ`` account object is the local reference for accessing your IBM Q account, and all of the providers, backends, etc, that are available to you."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:30
msgid "The ``IBMQ`` account has functions for handling administrative tasks. The credentials can be saved to disk, or used in a session and never saved."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:33
msgid "``enable_account(TOKEN)``: Enable your account in the current session"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:34
msgid "``save_account(TOKEN)``: Save your account to disk for future use."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:35
msgid "``load_account()``: Load account using stored credentials."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:36
msgid "``disable_account()``: Disable your account in the current session."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:37
msgid "``active_account()``: List the account currently in the session."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:38
msgid "``stored_account()``: List the account stored to disk."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:39
msgid "``delete_account())``: Delete the saved account from disk."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:41
msgid "In order to access quantum devices, simulators, or other services, you must specify the source of these items by selecting a provider.  To see all the providers available:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:58
msgid "where we have assumed that the user has stored their IBMQ account information locally ahead of time using ``IBMQ.save_account(TOKEN)``."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:61
msgid "The above example shows two different providers.  All ``IBMQ`` providers are specified by a ``hub``, ``group``, and ``project``.  The provider given by ``hub='ibm-q', group='open', project='main'`` is the provider that gives access to the public IBM Q devices available to all IQX users.  The second is an example of a provider that is only unlocked for a specific set of users.  Members of the IBM Q network may see one or more providers (with names different than those shown above) depending on the access level granted to them."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:69
msgid "To access a given provider one should use the ``get_provider()`` method of the ``IBMQ`` account, filtering by ``hub``, ``group``, or ``project``:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:90
msgid "Finally, as a convenience, calling ``IBMQ.load_account()`` or ``IBMQ.enable_account()`` will return the default public provider instance ``<AccountProvider for IBMQ(hub='ibm-q', group='open', project='main')>``."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:96
msgid "The Provider"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:98
msgid "Providers accessed via the ``IBMQ`` account provide access to a group of different backends (for example, backends available through the IBM Q Experience or IBM Q Network quantum cloud services)."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:102
msgid "A provider inherits from ``BaseProvider`` and implements the methods:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:104
msgid "``backends()``: returns all backend objects known to the provider."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:105
msgid "``get_backend(NAME)``: returns the named backend."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:107
msgid "Using the public provider instance from above:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:122
msgid "Selecting a backend is done by name using the ``get_backend(NAME)`` method:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:130
msgid "Filtering the backends"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:132
msgid "You may also optionally filter the set of returned backends, by passing arguments that query the backend’s ``configuration`` or ``status`` or ``properties``. The filters are passed by conditions and, for more general filters, you can make advanced functions using the lambda function."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:138
msgid "As a first example lets return only those backends that are real quantum devices, and that are currently operational:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:154
msgid "Or, only those backends that are real devices, have more than 10 , and are operational"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:169
msgid "Filter: show the least busy device (in terms of the number of jobs pending in the queue)"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:186
msgid "The above filters can be combined as desired."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:190
msgid "The Backend"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:192
msgid "Backends represent either a simulator or a real quantum computer, and are responsible for running quantum circuits and/or pulse schedules and returning results. They have a ``run`` method which takes in a ``qobj`` as input, which is a quantum object and the result of the compilation process, and returns a ``BaseJob`` object. This object allows asynchronous running of jobs for retrieving results from a backend when the job is completed."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:199
msgid "At a minimum, backends use the following methods, inherited from ``BaseBackend``:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:202
msgid "``provider`` - Returns the provider of the backend"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:203
msgid "``name()`` - Returns the name of the backend."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:204
msgid "``status()`` - Returns the current status of the backend."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:205
msgid "``configuration()`` - Returns the backend's configuration."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:206
msgid "``properties()`` -Returns the backend properties."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:207
msgid "``run(QOBJ, **kwargs)`` - Runs a qobj on the backend."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:209
msgid "For remote backends they must support the additional"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:211
msgid "``jobs()`` - Returns a list of previous jobs executed on this backend through the current provider instance."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:213
msgid "``retrieve_job()`` - returns a job by a job_id."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:215
msgid "On a per device basis, the following commands may be supported:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:217
msgid "``defaults()`` - Gives a data structure of typical default parameters."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:219
msgid "``schema()`` - gets a schema for the backend"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:221
msgid "There are some IBM Q backend only attributes:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:223
msgid "``hub`` - The IBMQ hub for this backend."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:224
msgid "``group`` - The IBMQ group for this backend."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:225
msgid "``project`` - The IBMQ project for this backend."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:231
msgid "Let’s start with the ``backend.provider()``, which returns a provider object"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:244
msgid "Next is the ``name()``, which returns the name of the backend"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:257
msgid "Next let’s look at the ``status()``:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:270
msgid "Here we see the name of the backend, the software version it is running, along with its operational status, number of jobs pending in the backends queue, and a more detailed status message."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:275
msgid "The next is ``configuration()``"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:287
msgid "The next is ``properties()`` method"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:299
msgid "To see your last 5 jobs ran on the backend use the ``jobs()`` method of that backend"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:317
msgid "A job can be retrieved using ``retrieve_job(job_id())`` method"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:326
msgid "The Job"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:328
msgid "Job instances can be thought of as the “ticket” for a submitted job. They find out the execution’s state at a given point in time (for example, if the job is queued, running, or has failed), and also allow control over the job. They have the following methods:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:333
msgid "``status()`` - returns the status of the job."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:334
msgid "``backend()`` - returns the backend the job was run on."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:335
msgid "``job_id()`` - gets the job_id."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:336
msgid "``cancel()`` - cancels the job."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:337
msgid "``result()`` - gets the results from the circuit run."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:339
msgid "IBM Q only functions include:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:341
msgid "``creation_date()`` - gives the date at which the job was created."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:342
msgid "``queue_position()`` - gives the position of the job in the queue."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:343
msgid "``error_message()`` - gives the error message of failed jobs."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:345
msgid "Let’s start with the ``status()``. This returns the job status and a message"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:358
msgid "To get a backend object from the job use the ``backend()`` method"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:371
msgid "To get the job_id use the ``job_id()`` method"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:383
msgid "To get the result from the job use the ``result()`` method"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:397
msgid "If you want to check the creation date use ``creation_date()``"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:409
msgid "Let’s make an active example"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:433
msgid "To execute this circuit on the backend use the ``execute`` function. It will internally transpile the circuit to run on the given backend, send it to the device, and return the corresponding job instance."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:441
msgid "The status of this job can be checked with the ``status()`` method"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:453
msgid "If you made a mistake and need to cancel the job use the ``cancel()`` method."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:466
msgid "The ``status()`` will show that the job cancelled."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:477
msgid "If the job status is ``<JobStatus.QUEUED: 'job is queued'>`` then the queue position is available from the  ``queue_position()`` method."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:489
msgid "There is also built-in functionality for automatically monitoring a job:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:502
msgid "If a job is successful, ``<JobStatus.DONE: 'job has successfully run'>``, the ``result()`` method of a job retrieves the results of a computation from which the requested information can be retrieved."
msgstr ""

