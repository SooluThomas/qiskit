# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-26 16:22+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../terra/visualizing_a_quantum_circuit.rst:5
msgid "Visualizing a Quantum Circuit"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:12
msgid "Drawing a Quantum Circuit"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:14
msgid ""
"When building a quantum circuit it often helps to draw the circuit. This "
"is supported natively by a ``QuantumCircuit`` object. You can either just"
" call ``print()`` on the circuit or call the ``draw()`` method on the "
"object. This will render a `ASCII art version "
"<https://en.wikipedia.org/wiki/ASCII_art>`__ of the circuit diagram."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:87
msgid "Alternative Renderers for Circuits"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:89
msgid ""
"While a text output is useful for quickly seeing the output while "
"developing a circuit it doesn’t provide the most flexibility in it’s "
"output. There are 2 other alternative output renderers for the quantum "
"circuit. One uses `matplotlib <https://matplotlib.org/>`__ and the other "
"uses `LaTex <https://www.latex-project.org/>`__ leveraging the `qcircuit "
"package <https://github.com/CQuIC/qcircuit>`__. These can be specified by"
" using ``mpl`` and ``latex`` values for the ``output`` kwarg on the "
"draw() method."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:122
msgid "Controlling output from circuit.draw()"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:124
msgid ""
"By default, the draw method returns the rendered image as an object and "
"does not output anything. The specific class returned depends on the "
"output specified: ``'text'``\\(the default output type) returns a "
"``TextDrawer`` object, ``'mpl'`` returns a ``matplotlib.Figure`` object, "
"and ``latex`` returns a ``PIL.Image`` object. Having the return types "
"enables modifying or directly interacting with the rendered output from "
"the drawers. Jupyter notebooks understand these return types and render "
"it for us in this tutorial, but when running outside of a Jupyter "
"notebook, you do not have this feature automatically. Instead, the "
"``draw()`` method has optional arguments to display or save the output. "
"When ``draw()`` is specified, you can specify a path to save the rendered"
" output to by using the ``filename`` kwarg. Or if you’re using the "
"``mpl`` or ``latex`` outputs, you can leverage the ``interactive`` kwarg "
"to open the image in a new window."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:140
msgid "Customizing the output"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:142
msgid ""
"Depending on the output there are also options to customize the circuit "
"diagram rendered by the circuit."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:146
msgid "Disable Plot Barriers and Reversing Bit Order"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:148
msgid ""
"The first two options are available with all 3 backends and they let you "
"configure both the bit orders and whether or not you draw barriers. You "
"can set the bit orders and barriers with the ``reverse_bits`` kwarg and "
"``plot_barriers`` kwarg respectively. The following examples will work "
"with any output backend, only ``latex`` is used for brevity."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:231
msgid "Backend specific customizations"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:233
msgid "You can customize the output diagram for specific backends."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:235
msgid ""
"Use the ``line_length`` kwarg for the ``text`` backend to set a maximum "
"width for the output. When a diagram is wider than the ``line_length`` "
"kwarg, it will wrap the diagram to the next line."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:239
msgid ""
"The ``scale`` option is used by both the ``mpl`` and ``latex`` backends "
"to adjust the size of the output image. ``scale`` is a multiplicative "
"adjustment factor used to scale the output size."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:243
msgid ""
"The ``mpl`` backend has the ``style`` kwarg, which is used to customize "
"the output. The ``style`` kwarg takes in a dict with many different "
"options. ``style`` provides a high level of flexibility and enables style"
" formatting like changing colors, changing rendered text for different "
"types of gates, different line styles, etc."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:249
msgid ": ``style`` kwarg configuration options"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:252
msgid "OPTION"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:252
msgid "DEFAULT VALUES"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:252
msgid "DESCRIPTION"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:254
msgid "displaycolor(dict)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "id:``#F0E442``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "u0:``#E7AB3B``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "u1:``#E7AB3B``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "u2:``#E7AB3B``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "u3:``#E7AB3B``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "x:``#58C698``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "y:``#58C698``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "z:``#58C698``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "h:``#70B7EB``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "s:``#E0722D``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "sdg:``#E0722D``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "t:``#E0722D``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "tdg:``#E0722D``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "rx:``#ffffff``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "ry:``#ffffff``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "rz:``#ffffff``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "reset:``#D188B4``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "target:``#70B7EB``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "meas:``#D188B4``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid ""
"The color codes to use for each circuit element. You must specify all the"
" necessary values when using this dictionary. There is no provision for "
"passing an incomplete dict and using values from the default otherwise."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:274
msgid "textcolor(str)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "``#000000``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "Color code for text"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:275
msgid "subtextcolor(str)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "Color code for subtext"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:276
msgid "linecolor(str)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "Color code for lines."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:277
msgid "creglinecolor(str)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "``#778899``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "Color code for classical register lines."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:278
msgid "gatetextcolor(str)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "Color code for gate text."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:279
msgid "gatefacecolor(str)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "``#ffffff``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "Color code for gates."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:280
msgid "barrierfacecolor(str)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "``#bdbdbd``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "Color code for barriers."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:281
msgid "backgroundcolor(str)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "Color code for the diagram background."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:282
msgid "fontsize(int)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "13"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "Font size for text."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:283
msgid "subfontsize(int)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "8"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "Font size to use for subtext."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:284
msgid "displaytext(dict)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "id: id"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "u0: U_0"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "u1: U_1"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "u2: U_2"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "u3: U_3"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "x: X"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "y: Y"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "z: Z"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "h: H"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "s: S"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "sdg: :math:`S^\\dagger`"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "t: T"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "tdg: :math:`T^\\dagger`"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "rx: R_x"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "ry: R_y"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "rz: R_z"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "reset: :math:`|0\\rangle`"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid ""
"A dictionary of the text to use for each element type in the output "
"visualization. ou must specify all the necessary values when using this "
"dictionary. There is no provision for passing an incomplete dict and "
"using values from the default otherwise."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:302
msgid "latexdrawerstyle(bool)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "``False``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid ""
"When set to ``True``, enable latex mode which will draw gates like the "
"``latex`` output modes."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:303
msgid "usepiformat(bool)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "When set to ``True``, use radians for output."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:304
msgid "fold(int)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "20"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "The number of circuit elements to fold the circuit."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:305
msgid "cregbundle(bool)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "If set ``True``, bundle classical registers."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:306
msgid "showindex(bool)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "If set ``True``, draw an index."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:307
msgid "compress(bool)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "If set ``True``, draw a compressed circuit."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:308
msgid "figwidth(int)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "The maximum width (in inches) for the output figure."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:309
msgid "dpi(int)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "150"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "The DPI to use for the output image."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:310
msgid "creglinestyle(str)"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid "``doublet``"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst
msgid ""
"The style of line to use for classical registers. Choices are "
"``'solid'``, ``'doublet'``, or any valid matplotlib ``linestyle`` kwarg "
"value."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:434
msgid "Latex Source"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:436
msgid ""
"One additional option available with the latex output type is to return "
"the raw LaTex source code instead of rendering an image for it. This "
"enables easy integration in a seperate LaTex document. To use this you "
"can just set the ``output`` kwarg to ``'latex_source'``. You can also use"
" the ``filename`` kwarg to write this output directly to a file (and "
"still return the string) instead of returning just a string."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:496
msgid "circuit_drawer() as function"
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:498
msgid ""
"If you have an application where you prefer to draw a circuit with a self"
" contained function instead of as a method of a circuit object you can "
"directly use the ``circuit_drawer()`` function, which is part of the "
"public stable interface from ``qiskit.tools.visualization``. The function"
" behaves identically to the ``circuit.draw()`` method except that it "
"takes in a circuit object as required argument."
msgstr ""

#: ../../terra/visualizing_a_quantum_circuit.rst:509
msgid ""
"Note: In Qiskit Terra <= 0.7 the default behavior for the "
"circuit_drawer() function is to use the latex output backend, and in "
"0.6.x that includes a fallback to mpl if latex fails for any reason. But "
"starting in releases > 0.7 the default changes to use the text output."
msgstr ""

