# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-03 15:29-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../autodoc/qiskit.providers.aer.noise.errors.errorutils.rst:2
msgid "qiskit.providers.aer.noise.errors.errorutils module"
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils:1
msgid "Helper functions for noise model creation."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.circuit2superop:1
msgid "Return the SuperOp for a standard instruction."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.is_matrix_diagonal:1
msgid "Test if row-vector representation of diagonal matrix."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.kraus2instructions:1
msgid "Convert a list of Kraus matrices into qobj circuits."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.kraus2instructions:3
msgid "If any Kraus operators are a unitary matrix they will be converted into unitary qobj instructions. Identity unitary matrices will also be converted into identity qobj instructions."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.kraus2instructions:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_kraus_instruction:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_unitary_instruction:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_gates:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_instructions:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_matrix:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.standard_gate_instruction:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.standard_gates_instructions:0
msgid "パラメータ"
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.kraus2instructions:7
msgid "A list of Kraus matrices for a CPTP map."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.kraus2instructions:9
msgid "Check if the matrix instruction is a standard instruction (default: True)."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.kraus2instructions:12
msgid "Threshold for testing if probabilities are zero."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.kraus2instructions:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_kraus_instruction:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_unitary_instruction:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_gates:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_instructions:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_matrix:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.standard_gate_instruction:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.standard_gates_instructions:0
msgid "戻り値"
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.kraus2instructions:15
msgid "A list of pairs (p, circuit) where `circuit` is a list of qobj instructions, and `p` is the probability of that circuit for the given error."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.kraus2instructions:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_kraus_instruction:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_unitary_instruction:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_gates:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_instructions:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_matrix:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.standard_gate_instruction:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.standard_gates_instructions:0
msgid "戻り値の型"
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.kraus2instructions:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_kraus_instruction:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_unitary_instruction:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_gates:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_instructions:0
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_matrix:0
msgid "例外"
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.kraus2instructions:20
msgid "If the input Kraus channel is not CPTP."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_kraus_instruction:1
msgid "Return a qobj instruction for a Kraus error."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_kraus_instruction:3
msgid "A list of square or diagonal Kraus matrices."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_kraus_instruction:5
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_unitary_instruction:5
msgid "The qubits the matrix is applied to."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_kraus_instruction:8
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_unitary_instruction:11
msgid "The qobj instruction object."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_kraus_instruction:11
msgid "if the input is not a CPTP Kraus channel."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_unitary_instruction:1
msgid "Return a qobj instruction for a unitary matrix gate."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_unitary_instruction:3
msgid "A square or diagonal unitary matrix."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_unitary_instruction:7
msgid "Check if the matrix instruction is a standard instruction."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.make_unitary_instruction:14
msgid "if the input is not a unitary matrix."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.qubits_from_mat:1
msgid "Return the number of qubits for a multi-qubit matrix."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.reset_superop:1
msgid "Return a N-qubit reset SuperOp."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_gates:1
msgid "Return a QASM gate names for a single qubit clifford."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_gates:3
msgid "The labels are returned in a basis set consisting of ('id', 's', 'sdg', 'z', 'h', x', 'y') gates decomposed to use the minimum number of X-90 pulses in a (u1, u2, u3) decomposition."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_gates:8
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_instructions:8
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_matrix:3
msgid "Clifford index 0, ..., 23."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_gates:11
msgid "The tuple of basis gates."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_gates:14
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_matrix:9
msgid "If index is out of range [0, 23]."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_instructions:1
msgid "Return a list of qobj instructions for a single qubit cliffords."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_instructions:3
msgid "The instructions are returned in a basis set consisting of ('id', 's', 'sdg', 'z', 'h', x', 'y') gates decomposed to use the minimum number of X-90 pulses in a (u1, u2, u3) decomposition."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_instructions:10
msgid "the qubit to apply the Clifford to."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_instructions:13
msgid "The list of instructions."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_instructions:16
msgid "If index is out of range [0, 23] or qubit invalid."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_matrix:1
msgid "Return Numpy array for a single qubit clifford."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.single_qubit_clifford_matrix:6
msgid "The matrix for the indexed clifford."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.standard_gate_instruction:1
msgid "Convert a unitary matrix instruction into a standard gate instruction."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.standard_gate_instruction:3
msgid "A qobj instruction."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.standard_gate_instruction:5
msgid "Ignore global phase on unitary matrix in comparison to canonical unitary."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.standard_gate_instruction:9
#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.standard_gates_instructions:6
msgid "a list of qobj instructions equivalent to in input instruction."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.standard_gate_unitary:1
msgid "Return the unitary matrix for a standard gate."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.standard_gates_instructions:1
msgid "Convert a list with unitary matrix instructions into standard gates."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.standard_gates_instructions:3
msgid "A list of qobj instructions."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.standard_instruction_channel:1
msgid "Return the SuperOp channel for a standard instruction."
msgstr ""

#: ../../../../../../../../anaconda3/envs/myQiskit/lib/python3.7/site-packages/qiskit/providers/aer/noise/errors/errorutils.py:docstring of qiskit.providers.aer.noise.errors.errorutils.standard_instruction_operator:1
msgid "Return the Operator for a standard gate instruction."
msgstr ""

